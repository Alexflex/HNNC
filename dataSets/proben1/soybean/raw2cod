#!/tools/bin/perl
#
# Lutz Prechelt, 94/02/16
#
# Encodes 'soybean' raw data file into a training file.
#
# usage: raw2cod inputfile >outputfile

@vals = (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
while (<>) {
  @F = split (",");

  $v = $F[1]/6;
  printf ("%g ", $v);

  $v = $F[2];
  printf ("%d ", $v == 1 ? 1 : 0);
  

  $v = $F[3];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "-1 0" :
                 $v == 1   ? "0 0" :
                 $v == 2   ? "1 0" : "###");

  $v = $F[4];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "0.5 0" :
                 $v == 2   ? "1 0" : "###");


  $v = $F[5];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "1 0" :
                 $v == 1   ? "0 0" : "###");


  $v = $F[6];
  printf ("%g %d  ", $v eq "?" ? 0 : $v/3, $v eq "?" ? 1 : 0);

  $v = $F[7];
  printf ("%s ", $v eq "?" ? "0 0" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "0 1" :
                 $v == 2   ? "1 0" :
                 $v == 3   ? "1 1" : "###");

  $v = $F[8];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "-1 0" :
                 $v == 1   ? "0 0" :
                 $v == 2   ? "1 0" : "###");

  $v = $F[9];
  printf ("%s ", $v eq "?" ? "1 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" :
                 $v == 2   ? "0 1" : "###");

  $v = $F[10];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "1 0" :
                 $v == 1   ? "0.5 0" :
                 $v == 2   ? "0 0" : "###");

  $v = $F[11];
  printf ("%s ", $v == 0   ? "0" : "1");

  $v = $F[12];
  printf ("%s ", $v == 0   ? "0" : "1");

  $v = $F[13];
  printf ("%s ", $v eq "?" ? "1 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "0 1" :
                 $v == 2   ? "1 0" : "###");

  $v = $F[14];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" :
                 $v == 2   ? "0.5 0" : "###");

  $v = $F[15];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" :
                 $v == 2   ? "0.5 0" : "###");

  $v = $F[16];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[17];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");


  $v = $F[18];
  printf ("%s ", $v eq "?" ? "0 0 1" :
                 $v == 0   ? "0 0 0" :
                 $v == 1   ? "1 0 0" :
                 $v == 2   ? "0 1 0" : "###");

  $v = $F[19];
  printf ("%s ", $v eq "?" ? "0.5" :
                 $v == 0   ? "0" :
                 $v == 1   ? "1" : "###");


  $v = $F[20];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[21];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "0 0 0 0" :
                 $v == 1   ? "1 0 0 0" :
                 $v == 2   ? "0 1 0 0" :
                 $v == 3   ? "0 0 1 0" : "###");

  $v = $F[22];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "0 0 0 0" :
                 $v == 1   ? "1 0 0 0" :
                 $v == 2   ? "0 1 0 0" :
                 $v == 3   ? "0 0 1 0" : "###");

  $v = $F[23];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[24];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "1 0 0 0" :
                 $v == 1   ? "0 1 0 0" :
                 $v == 2   ? "0 0 1 0" : "###");

  $v = $F[25];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[26];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "1 0 0 0" :
                 $v == 1   ? "0 1 0 0" :
                 $v == 2   ? "0 0 1 0" : "###");

  $v = $F[27];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[28];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "1 0 0 0" :
                 $v == 1   ? "0 1 0 0" :
                 $v == 2   ? "0 0 1 0" :
                 $v == 3   ? "0 0 0 0" : "###");

  $v = $F[29];
  printf ("%s ", $v eq "?" ? "0 0 0 0 0 1" :
                 $v == 0   ? "1 0 0 0 0 0" :
                 $v == 1   ? "0 1 0 0 0 0" :
                 $v == 2   ? "0 0 1 0 0 0" :
                 $v == 3   ? "0 0 0 1 0 0" :
                 $v == 4   ? "0 0 0 0 1 0" : "###");

  $v = $F[30];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[31];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[32];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[33];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[34];
  printf ("%s ", $v eq "?" ? "0 1" :
                 $v == 0   ? "0 0" :
                 $v == 1   ? "1 0" : "###");

  $v = $F[35];
  printf ("%s ", $v eq "?" ? "0 0 0 1" :
                 $v == 0   ? "1 0 0 0" :
                 $v == 1   ? "0 1 0 0" :
                 $v == 2   ? "0 0 1 0" : "###");


  #-----output class:
  $v = $F[0];
  $c =
  ($v eq "herbicide-injury" ? 0 :
  ($v eq "cyst-nematode" ? 1 :
  ($v eq "diaporthe-pod-&-stem-blight" ? 2 :
  ($v eq "2-4-d-injury" ? 3 :
  ($v eq "bacterial-blight" ? 4 :
  ($v eq "bacterial-pustule" ? 5 :
  ($v eq "charcoal-rot" ? 6 :
  ($v eq "diaporthe-stem-canker" ? 7 :
  ($v eq "downy-mildew" ? 8 :
  ($v eq "phyllosticta-leaf-spot" ? 9 :
  ($v eq "powdery-mildew" ? 10 :
  ($v eq "purple-seed-stain" ? 11 :
  ($v eq "rhizoctonia-root-rot" ? 12 :
  ($v eq "anthracnose" ? 13 :
  ($v eq "brown-stem-rot" ? 14 :
  ($v eq "phytophthora-rot" ? 15 :
  ($v eq "alternarialeaf-spot" ? 16 :
  ($v eq "frog-eye-leaf-spot" ? 17 :
  ($v eq "brown-spot" ? 18 : -1)))))))))))))))))));
  $vals[$c] = 1;
  printf ("%s\n", join (" ", @vals[0..18]));
  $vals[$c] = 0;
  

}

