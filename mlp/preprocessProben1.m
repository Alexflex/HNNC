function preprocessProben1()
% Функция осуществляет разбор файлов базы данных proben1 из каталога
% ../dataSets/proben1 в каталог preparedDataSets в виде набора множеств 
% для ИНС 

clc;

% список имен файлов, содержащих исходные данные для наборов множеств ИНС
filenames = {...   
        '../dataSets/proben1/building/building1.dt',...
        '../dataSets/proben1/building/building2.dt',...
        '../dataSets/proben1/building/building3.dt',...
        '../dataSets/proben1/cancer/cancer1.dt',...
        '../dataSets/proben1/cancer/cancer2.dt',...
        '../dataSets/proben1/cancer/cancer3.dt',...
        '../dataSets/proben1/card/card1.dt',...
        '../dataSets/proben1/card/card2.dt',...
        '../dataSets/proben1/card/card3.dt',...
        '../dataSets/proben1/diabetes/diabetes1.dt',...
        '../dataSets/proben1/diabetes/diabetes2.dt',...
        '../dataSets/proben1/diabetes/diabetes3.dt',...
        '../dataSets/proben1/flare/flare1.dt',...
        '../dataSets/proben1/flare/flare2.dt',...
        '../dataSets/proben1/flare/flare3.dt',...
        '../dataSets/proben1/gene/gene1.dt',...
        '../dataSets/proben1/gene/gene2.dt',...
        '../dataSets/proben1/gene/gene3.dt',...
        '../dataSets/proben1/glass/glass1.dt',...
        '../dataSets/proben1/glass/glass2.dt',...
        '../dataSets/proben1/glass/glass3.dt',...
        '../dataSets/proben1/heart/heart1.dt',...
        '../dataSets/proben1/heart/heart2.dt',...
        '../dataSets/proben1/heart/heart3.dt',...
        '../dataSets/proben1/heart/heartc1.dt',...
        '../dataSets/proben1/heart/heartc2.dt',...
        '../dataSets/proben1/heart/heartc3.dt',...            
        '../dataSets/proben1/heart/hearta1.dt',...
        '../dataSets/proben1/heart/hearta2.dt',...
        '../dataSets/proben1/heart/hearta3.dt',...
        '../dataSets/proben1/heart/heartac1.dt',...
        '../dataSets/proben1/heart/heartac2.dt',...
        '../dataSets/proben1/heart/heartac3.dt',...  
        '../dataSets/proben1/horse/horse1.dt',...  
        '../dataSets/proben1/horse/horse2.dt',...  
        '../dataSets/proben1/horse/horse3.dt',...  
        '../dataSets/proben1/mushroom/mushroom1.dt',...
        '../dataSets/proben1/mushroom/mushroom2.dt',...
        '../dataSets/proben1/mushroom/mushroom3.dt',...        
        '../dataSets/proben1/soybean/soybean1.dt',...
        '../dataSets/proben1/soybean/soybean2.dt',...
        '../dataSets/proben1/soybean/soybean3.dt',...        
        '../dataSets/proben1/thyroid/thyroid1.dt',...
        '../dataSets/proben1/thyroid/thyroid2.dt',...
        '../dataSets/proben1/thyroid/thyroid3.dt',...
    };

global preprocessed_names;

% наборы данных для обучения и тестирования ИНС
preprocessed_names = {...
        'building1',...
        'building2',...
        'building3',...
        'cancer1',...
        'cancer2',...
        'cancer3',...
        'card1',...
        'card2',...
        'card3',...
        'diabetes1',...
        'diabetes2',...
        'diabetes3',...
        'flare1',...
        'flare2',...
        'flare3',...
        'gene1',...
        'gene2',...
        'gene3',...
        'glass1',...
        'glass2',...
        'glass3',...
        'heart1',...
        'heart2',...
        'heart3',...
        'heartc1',...
        'heartc2',...
        'heartc3',...
        'hearta1',...
        'hearta2',...
        'hearta3',...
        'heartac1',...
        'heartac2',...
        'heartac3',...
        'horse1'...
        'horse2'...
        'horse3'...
        'mushroom1',...
        'mushroom2',...
        'mushroom3',...        
        'soybean1',...
        'soybean2',...
        'soybean3',...        
        'thyroid1',...
        'thyroid2',...
        'thyroid3',...
};

timeStart = cputime;
fprintf('\nНачало обработки базы proben1...');

for k = 1:length(filenames)
    fprintf('\n\tОбрабатывается %s', char(filenames(k)));        
    readDtFiles(char(filenames(k)), char(strcat('./preparedDataSets/', ...
                                            preprocessed_names(k))));        
end

fprintf('\nОбработка базы proben1 завершена. Обработано %d примеров за %8.3f с', ...
            length(filenames), ...
            cputime - timeStart);
end % of function    

% Функция осуществляет разбор файла типа dt из базы proben1
function readDtFiles(filename, dataName)
fid = fopen(filename, 'r');
if fid ~= -1
    data = fscanf(fid, '%*8c%d\n', [2, 1]);
    numInputs = sum(data);

    data = fscanf(fid, '%*9c%d\n', [2, 1]);
    numOutputs = sum(data);

    data = fscanf(fid, '%*18c%d\n', [1, 1]);            
    training.count = data;
    training.index = randperm(data);

    data = fscanf(fid, '%*20c%d\n', [1, 1]);           
    validation.count = data;
    validation.index = randperm(data);

    data = fscanf(fid, '%*14c%d\n', [1, 1]);           
	test.count = data;
    test.index = randperm(data);

    sampleCount = training.count + validation.count + test.count;

    data = fscanf(fid, '%g', [numInputs + numOutputs, sampleCount])';

    hasTraining = true;
    training.id = 1:training.count;
    training.inputs = data(1:training.count, 1:numInputs);
    training.outputs = data(1:training.count, (numInputs + 1):end);
    training.classes = classesFromOutputs(training.outputs);
    training.sourceClasses = training.classes;
    validationStart = training.count + 1;
    validationEnd = training.count + validation.count;

    hasValidation = true;
    validation.id = 1:validation.count;
    validation.inputs = data(validationStart:validationEnd, 1:numInputs);
    validation.outputs = data(validationStart:validationEnd, (numInputs + 1):end);
    validation.classes = classesFromOutputs(validation.outputs);      
    validation.sourceClasses = validation.classes;

    outputStart = validationEnd + 1;

    hasTest = true;
    test.id = 1:test.count;
    test.inputs = data(outputStart:end, 1:numInputs);
    test.outputs = data(outputStart:end, (numInputs + 1):end);
    test.classes = classesFromOutputs(test.outputs);
    test.sourceClasses = test.classes;

    save(dataName, 'training', 'validation', 'test', ...
        'numInputs', 'numOutputs', ...
        'hasTraining', 'hasValidation', 'hasTest');

else
	fprintf('\nreadDtFiles: Не удалось открыть файл %s', filename);
end

end %of function